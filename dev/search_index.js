var documenterSearchIndex = {"docs":
[{"location":"#HypergeoMat.jl-documentation","page":"Documentation","title":"HypergeoMat.jl documentation","text":"","category":"section"},{"location":"#Hypergeometric-function-of-a-matrix-argument","page":"Documentation","title":"Hypergeometric function of a matrix argument","text":"","category":"section"},{"location":"","page":"Documentation","title":"Documentation","text":"Let (a_1 ldots a_p) and (b_1 ldots b_q) be two vectors of real or  complex numbers, possibly empty, alpha  0 and X a real symmetric or a  complex Hermitian matrix.  The corresponding hypergeometric function of a matrix argument is defined by ","category":"page"},{"location":"","page":"Documentation","title":"Documentation","text":"_pF_q^(alpha)\nleft(beginmatrix a_1 ldots a_p  b_1 ldots b_qendmatrix Xright) = \nsum_k=0^inftysum_kappa vdash k \nfrac(a_1)_kappa^(alpha) cdots (a_p)_kappa^(alpha)\n(b_1)_kappa^(alpha) cdots (b_q)_kappa^(alpha) \nfracC_kappa^(alpha)(X)k","category":"page"},{"location":"","page":"Documentation","title":"Documentation","text":"The inner sum is over the integer partitions kappa of k (which we also  denote by kappa = k). The symbol (cdot)_kappa^(alpha) is the  generalized Pochhammer symbol, defined by","category":"page"},{"location":"","page":"Documentation","title":"Documentation","text":"(c)_kappa^(alpha) = prod_i=1^ellprod_j=1^kappa_i\nleft(c - fraci-1alpha + j-1right)","category":"page"},{"location":"","page":"Documentation","title":"Documentation","text":"when kappa = (kappa_1 ldots kappa_ell).  Finally, C_kappa^(alpha) is a Jack function.  Given an integer partition kappa and alpha  0, and a  real symmetric or complex Hermitian matrix X of order n,  the Jack function ","category":"page"},{"location":"","page":"Documentation","title":"Documentation","text":"C_kappa^(alpha)(X) = C_kappa^(alpha)(x_1 ldots x_n)","category":"page"},{"location":"","page":"Documentation","title":"Documentation","text":"is a symmetric homogeneous polynomial of degree kappa in the  eigen values x_1, ldots, x_n of X. ","category":"page"},{"location":"","page":"Documentation","title":"Documentation","text":"The series defining the hypergeometric function does not always converge.  See the references for a discussion about the convergence. ","category":"page"},{"location":"","page":"Documentation","title":"Documentation","text":"The inner sum in the definition of the hypergeometric function is over  all partitions kappa vdash k but actually  C_kappa^(alpha)(X) = 0 when ell(kappa), the number of non-zero  entries of kappa, is strictly greater than n.","category":"page"},{"location":"","page":"Documentation","title":"Documentation","text":"For alpha=1, C_kappa^(alpha) is a Schur polynomial and it is  a zonal polynomial for alpha = 2.  In random matrix theory, the hypergeometric function appears for alpha=2  and alpha is omitted from the notation, implicitely assumed to be 2.  This is the default value of alpha in the HypergeoMat package. ","category":"page"},{"location":"","page":"Documentation","title":"Documentation","text":"Koev and Edelman (2006) provided an efficient algorithm for the evaluation  of the truncated series ","category":"page"},{"location":"","page":"Documentation","title":"Documentation","text":"_p^m F_q^(alpha)\nleft(beginmatrix a_1 ldots a_p  b_1 ldots b_qendmatrix Xright) = \nsum_k=0^msum_kappa vdash k \nfrac(a_1)_kappa^(alpha) cdots (a_p)_kappa^(alpha)\n(b_1)_kappa^(alpha) cdots (b_q)_kappa^(alpha) \nfracC_kappa^(alpha)(X)k","category":"page"},{"location":"","page":"Documentation","title":"Documentation","text":"In the HypergeoMat package, m is called the  truncation weight of the summation  (because kappa is called the weight of kappa),  the vector (a_1 ldots a_p) is  called the vector of upper parameters while  the vector (b_1 ldots b_q) is  called the vector of lower parameters.  The user can enter either the matrix X or the vector (x_1 ldots x_n)  of the eigenvalues of X. ","category":"page"},{"location":"","page":"Documentation","title":"Documentation","text":"For example, to compute","category":"page"},{"location":"","page":"Documentation","title":"Documentation","text":"_2^15 F_3^(2)\nleft(beginmatrix 3 4  5 6 7endmatrix \nbeginpmatrix\n01  04 \n04  01\nendpmatrixright)","category":"page"},{"location":"","page":"Documentation","title":"Documentation","text":"you have to enter (recall that alpha=2 is the default value)","category":"page"},{"location":"","page":"Documentation","title":"Documentation","text":"hypergeomPQ(15, [3.0;4.0], [5.0;6.0;7.0], [0.1 0.4; 0.4 0.1])","category":"page"},{"location":"","page":"Documentation","title":"Documentation","text":"We said that the hypergeometric function is defined for a real symmetric  matrix or a complex Hermitian matrix X. However we do not impose this  restriction in the HypergeoMat package. The user can enter any real  or complex square matrix, or a real or complex vector of eigen values. ","category":"page"},{"location":"#References","page":"Documentation","title":"References","text":"","category":"section"},{"location":"","page":"Documentation","title":"Documentation","text":"Plamen Koev and Alan Edelman. The Efficient Evaluation of the Hypergeometric Function of a Matrix Argument. Mathematics of Computation, 75, 833-846, 2006.\nRobb Muirhead. Aspects of multivariate statistical theory. Wiley series in probability and mathematical statistics. Probability and mathematical statistics. John Wiley & Sons, New York, 1982.\nA. K. Gupta and D. K. Nagar. Matrix variate distributions. Chapman and Hall, 1999.","category":"page"},{"location":"#Member-functions","page":"Documentation","title":"Member functions","text":"","category":"section"},{"location":"","page":"Documentation","title":"Documentation","text":"Modules = [HypergeoMat.HypergeomPQ, HypergeoMat.Mvgamma, HypergeoMat.Bessel]\nOrder   = [:type, :function]","category":"page"},{"location":"#HypergeoMat.HypergeomPQ.hypergeomPQ-Union{Tuple{T}, Tuple{R}, Tuple{Integer,Array{var\"#s104\",1} where var\"#s104\"<:Union{R, T},Array{var\"#s103\",1} where var\"#s103\"<:Union{R, T},Union{R, T}}} where T<:Complex{R} where R<:Real","page":"Documentation","title":"HypergeoMat.HypergeomPQ.hypergeomPQ","text":"hypergeomPQ(m, a, b, x)\n\nCompute the truncated hypergeometric function of a scalar argument.\n\nArguments\n\nm: truncation weight of the summation, a positive integer\na: the \"upper\" parameters, a real or complex vector, possibly empty\nb: the \"lower\" parameters, a real or complex vector, possibly empty\nx: scalar, real or complex\n\n\n\n\n\n","category":"method"},{"location":"#HypergeoMat.HypergeomPQ.hypergeomPQ-Union{Tuple{T}, Tuple{R}, Tuple{Integer,Array{var\"#s16\",1} where var\"#s16\"<:Union{R, T},Array{var\"#s58\",1} where var\"#s58\"<:Union{R, T},Array{var\"#s59\",1} where var\"#s59\"<:Union{R, T}}, Tuple{Integer,Array{var\"#s60\",1} where var\"#s60\"<:Union{R, T},Array{var\"#s61\",1} where var\"#s61\"<:Union{R, T},Array{var\"#s62\",1} where var\"#s62\"<:Union{R, T},Union{Nothing, R}}} where T<:Complex{R} where R<:Real","page":"Documentation","title":"HypergeoMat.HypergeomPQ.hypergeomPQ","text":"hypergeomPQ(m, a, b, x[, alpha])\n\nCompute the truncated hypergeometric function of a matrix argument given the    eigen values of the matrix.\n\nArguments\n\nm: truncation weight of the summation, a positive integer\na: the \"upper\" parameters, a real or complex vector, possibly empty\nb: the \"lower\" parameters, a real or complex vector, possibly empty\nx: real or complex vector, the eigen values\nalpha: the alpha parameter, a positive number; if missing, alpha=2 is used\n\n\n\n\n\n","category":"method"},{"location":"#HypergeoMat.HypergeomPQ.hypergeomPQ-Union{Tuple{T}, Tuple{R}, Tuple{Integer,Array{var\"#s98\",1} where var\"#s98\"<:Union{R, T},Array{var\"#s97\",1} where var\"#s97\"<:Union{R, T},Array{var\"#s96\",2} where var\"#s96\"<:Union{R, T}}, Tuple{Integer,Array{var\"#s95\",1} where var\"#s95\"<:Union{R, T},Array{var\"#s94\",1} where var\"#s94\"<:Union{R, T},Array{var\"#s93\",2} where var\"#s93\"<:Union{R, T},Union{Nothing, R}}} where T<:Complex{R} where R<:Real","page":"Documentation","title":"HypergeoMat.HypergeomPQ.hypergeomPQ","text":"hypergeomPQ(m, a, b, X[, alpha])\n\nCompute the truncated hypergeometric function of a matrix argument. The    hypergeometric function is usually defined for a symmetric real matrix     or a Hermitian complex matrix but arbitrary square matrices are allowed.\n\nArguments\n\nm: truncation weight of the summation, a positive integer\na: the \"upper\" parameters, a real or complex vector, possibly empty\nb: the \"lower\" parameters, a real or complex vector, possibly empty\nX: a square matrix, real or complex\nalpha: the alpha parameter, a positive number; if missing, alpha=2 is used\n\n\n\n\n\n","category":"method"},{"location":"#HypergeoMat.Mvgamma.lmvgamma-Union{Tuple{T}, Tuple{R}, Tuple{Union{R, T},Integer}} where T<:Complex{R} where R<:Real","page":"Documentation","title":"HypergeoMat.Mvgamma.lmvgamma","text":"lmvgamma(z, p)\n\nCompute the logarithm of the multivariate Gamma function.\n\nArguments\n\nz: real or complex number\np: positive integer, the dimension\n\n\n\n\n\n","category":"method"},{"location":"#HypergeoMat.Mvgamma.mvgamma-Union{Tuple{T}, Tuple{R}, Tuple{Union{R, T},Integer}} where T<:Complex{R} where R<:Real","page":"Documentation","title":"HypergeoMat.Mvgamma.mvgamma","text":"mvgamma(z, p)\n\nCompute the multivariate Gamma function.\n\nArguments\n\nz: real or complex number\np: positive integer, the dimension\n\n\n\n\n\n","category":"method"},{"location":"#HypergeoMat.Bessel.BesselA-Union{Tuple{T}, Tuple{R}, Tuple{Integer,Array{var\"#s105\",1} where var\"#s105\"<:Union{R, T},Union{R, T}}} where T<:Complex{R} where R<:Real","page":"Documentation","title":"HypergeoMat.Bessel.BesselA","text":"BesselA(m, x, nu)\n\nCompute the truncated Herz's type one Bessel function of a matrix argument    given the eigen values of the matrix. \n\nArguments\n\nm: truncation weight of the hypergeometric function, a positive integer\nx: the eigen values, a vector of real or complex numbers\nnu: the order parameter, real or complex number with real(nu)>-1\n\n\n\n\n\n","category":"method"},{"location":"#HypergeoMat.Bessel.BesselA-Union{Tuple{T}, Tuple{R}, Tuple{Integer,Array{var\"#s105\",2} where var\"#s105\"<:Union{R, T},Union{R, T}}} where T<:Complex{R} where R<:Real","page":"Documentation","title":"HypergeoMat.Bessel.BesselA","text":"BesselA(m, X, nu)\n\nCompute the truncated Herz's type one Bessel function of a matrix argument. It     is usually defined for a symmetric real matrix or a Hermitian complex matrix    but arbitrary square matrices are allowed.\n\nArguments\n\nm: truncation weight of the hypergeometric function, a positive integer\nX: a square matrix, real or complex\nnu: the order parameter, real or complex number with real(nu)>-1\n\n\n\n\n\n","category":"method"}]
}
